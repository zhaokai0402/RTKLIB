.. _单点定位:

############
单点定位
############

.. contents:: 目录

.. _pntpos:

pntpos
=============

功能
    依靠多普勒频移测量值和伪距来进行单点定位，给出接收机的位置、速度和钟差

.. note::

    假设 sbas-gps, galileo-gps, qzss-gps, compass-gps 的时间偏移和接收机偏差可以忽略
    (只考虑 glonass-gps 时间偏差和接收机偏差)



参数说明
    ====================  ===============  ====  =========
            说明               类型        名称  输入/输出
    ====================  ===============  ====  =========
    观测数据              :ref:`obsd_t`    *obs  I
    观测数据数量          int              n     I
    导航数据              :ref:`nav_t`     *nav  I
    解算状态              :ref:`sol_t`     sol   IO
    方位角/高度角         double           azel  IO
    处理选项              :ref:`prcopt_t`  opt   IO
    卫星状态              :ref:`ssat_t`    ssat  IO
    消息                  char             *msg  O
    返回值(1:ok,0:error)  int
    ====================  ===============  ====  =========

调用关系
    如无特别说明，本文所出现的流程图中，纵向代表时间上的先后调用顺序，横向代表层次上的逐级调用顺序。

.. image:: ./img/pntpos.svg
    :align: center

处理过程
    1. 检查卫星个数是否大于 0
    #. 当处理选项 opt 中的模式不是单点模式(``PMODE_SINGLE``)时，电离层校正采用 Klobuchar 模型(广播电离层模型)，对流层校正则采用 Saastamoinen 模型；相反，当其为单点模式时，对输入参数 opt 不做修改。
    #. 调用 :ref:`satposs` 函数，按照所观测到的卫星顺序计算出每颗卫星的位置、速度、钟差、频漂。
    #. 调用 :ref:`estpos` 函数，通过伪距实现绝对定位，计算出接收机的位置和钟差，顺带返回实现定位后每颗卫星的方位角、仰角、定位时有效性、定位后伪距残差。
    #. 调用 :ref:`raim_fde` 函数(故障检测和排除)，对上一步得到的定位结果进行接收机自主正直性检测（RAIM）。通过再次使用 vsat 数组，这里只会在对定位结果有贡献的卫星数据进行检测。
    #. 调用 :ref:`estvel` 函数，依靠多普勒频移测量值计算接收机的速度。这里只使用通过了上一步 :ref:`raim_fde` 操作的卫星数据，所以对于计算出的速度就没有再次进行 RAIM了。
    #. 首先将 :ref:`ssat_t` 结构体数组的 vs(定位时有效性)、azel（方位角、仰角）、resp(伪距残余)、resc(载波相位残余)和 snr(信号强度)都置为 0，然后再将实现定位后的 azel、snr 赋予 ssat_t 结构体数组，而 vs、resp 则只赋值给那些对定位有贡献的卫星，没有参与定位的卫星，这两个属性值为 0。

.. note::

    这里只计算了接收机的钟差，而没有计算接收机的频漂，原因在于 :ref:`estvel` 函数中虽然计算得到了接收机频漂，但并没有将其输出到 ``sol_t.dtr`` 中

.. todo::

    调用 :ref:`raim_fde` 之前的判断, n >=5 是不是就可以, posopt[4] 代表了什么


.. _estpos:

estpos
==========

.. _raim_fde:

raim_fde
===========

.. _estvel:

estvel
=============